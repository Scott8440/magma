//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: feg/protos/s8_proxy.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "magma/lte/cloud/go/protos/oai"
	_ "magma/orc8r/lib/go/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PDNType int32

const (
	PDNType_IPV4   PDNType = 0
	PDNType_IPV6   PDNType = 1
	PDNType_IPV4V6 PDNType = 2
)

// Enum value maps for PDNType.
var (
	PDNType_name = map[int32]string{
		0: "IPV4",
		1: "IPV6",
		2: "IPV4V6",
	}
	PDNType_value = map[string]int32{
		"IPV4":   0,
		"IPV6":   1,
		"IPV4V6": 2,
	}
)

func (x PDNType) Enum() *PDNType {
	p := new(PDNType)
	*p = x
	return p
}

func (x PDNType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PDNType) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s8_proxy_proto_enumTypes[0].Descriptor()
}

func (PDNType) Type() protoreflect.EnumType {
	return &file_feg_protos_s8_proxy_proto_enumTypes[0]
}

func (x PDNType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PDNType.Descriptor instead.
func (PDNType) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{0}
}

// 3GPP TS 29.274  (not all 3gpp create session fields are included)
type CreateSessionRequestPgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                    string                   `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Msisdn                  string                   `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Mei                     string                   `protobuf:"bytes,3,opt,name=mei,proto3" json:"mei,omitempty"`
	ServingNetwork          *ServingNetwork          `protobuf:"bytes,5,opt,name=serving_network,json=servingNetwork,proto3" json:"serving_network,omitempty"`
	Uli                     *UserLocationInformation `protobuf:"bytes,4,opt,name=uli,proto3" json:"uli,omitempty"`
	RatType                 uint32                   `protobuf:"varint,6,opt,name=rat_type,json=ratType,proto3" json:"rat_type,omitempty"`
	PdnType                 PDNType                  `protobuf:"varint,7,opt,name=pdn_type,json=pdnType,proto3,enum=magma.feg.PDNType" json:"pdn_type,omitempty"`
	Paa                     *PdnAddressAllocation    `protobuf:"bytes,8,opt,name=paa,proto3" json:"paa,omitempty"`
	Apn                     string                   `protobuf:"bytes,9,opt,name=apn,proto3" json:"apn,omitempty"`
	SelectionMode           string                   `protobuf:"bytes,18,opt,name=selection_mode,json=selectionMode,proto3" json:"selection_mode,omitempty"`
	ApnRestriction          uint32                   `protobuf:"varint,11,opt,name=apn_restriction,json=apnRestriction,proto3" json:"apn_restriction,omitempty"`
	Ambr                    *Ambr                    `protobuf:"bytes,12,opt,name=ambr,proto3" json:"ambr,omitempty"` //Aggregate Maximum BitRate
	BearerContext           *BearerContext           `protobuf:"bytes,14,opt,name=bearer_context,json=bearerContext,proto3" json:"bearer_context,omitempty"`
	IndicationFlag          []byte                   `protobuf:"bytes,15,opt,name=indication_flag,json=indicationFlag,proto3" json:"indication_flag,omitempty"`
	ChargingCharacteristics string                   `protobuf:"bytes,16,opt,name=charging_characteristics,json=chargingCharacteristics,proto3" json:"charging_characteristics,omitempty"`
	TimeZone                *TimeZone                `protobuf:"bytes,17,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
}

func (x *CreateSessionRequestPgw) Reset() {
	*x = CreateSessionRequestPgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRequestPgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequestPgw) ProtoMessage() {}

func (x *CreateSessionRequestPgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequestPgw.ProtoReflect.Descriptor instead.
func (*CreateSessionRequestPgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequestPgw) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetMei() string {
	if x != nil {
		return x.Mei
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetServingNetwork() *ServingNetwork {
	if x != nil {
		return x.ServingNetwork
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetUli() *UserLocationInformation {
	if x != nil {
		return x.Uli
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetRatType() uint32 {
	if x != nil {
		return x.RatType
	}
	return 0
}

func (x *CreateSessionRequestPgw) GetPdnType() PDNType {
	if x != nil {
		return x.PdnType
	}
	return PDNType_IPV4
}

func (x *CreateSessionRequestPgw) GetPaa() *PdnAddressAllocation {
	if x != nil {
		return x.Paa
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetApn() string {
	if x != nil {
		return x.Apn
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetSelectionMode() string {
	if x != nil {
		return x.SelectionMode
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetApnRestriction() uint32 {
	if x != nil {
		return x.ApnRestriction
	}
	return 0
}

func (x *CreateSessionRequestPgw) GetAmbr() *Ambr {
	if x != nil {
		return x.Ambr
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetBearerContext() *BearerContext {
	if x != nil {
		return x.BearerContext
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetIndicationFlag() []byte {
	if x != nil {
		return x.IndicationFlag
	}
	return nil
}

func (x *CreateSessionRequestPgw) GetChargingCharacteristics() string {
	if x != nil {
		return x.ChargingCharacteristics
	}
	return ""
}

func (x *CreateSessionRequestPgw) GetTimeZone() *TimeZone {
	if x != nil {
		return x.TimeZone
	}
	return nil
}

type UserLocationInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lac    uint32 `protobuf:"varint,1,opt,name=lac,proto3" json:"lac,omitempty"`
	Ci     uint32 `protobuf:"varint,2,opt,name=ci,proto3" json:"ci,omitempty"`
	Sac    uint32 `protobuf:"varint,3,opt,name=sac,proto3" json:"sac,omitempty"`
	Rac    uint32 `protobuf:"varint,4,opt,name=rac,proto3" json:"rac,omitempty"`
	Tac    uint32 `protobuf:"varint,5,opt,name=tac,proto3" json:"tac,omitempty"`       // used on magma
	Eci    uint32 `protobuf:"varint,6,opt,name=eci,proto3" json:"eci,omitempty"`       // used on magma
	MeNbi  uint32 `protobuf:"varint,7,opt,name=MeNbi,proto3" json:"MeNbi,omitempty"`   // Macro eNodeB ID field
	EMeNbi uint32 `protobuf:"varint,8,opt,name=EMeNbi,proto3" json:"EMeNbi,omitempty"` // Extended Macro eNodeB ID field
}

func (x *UserLocationInformation) Reset() {
	*x = UserLocationInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLocationInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLocationInformation) ProtoMessage() {}

func (x *UserLocationInformation) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLocationInformation.ProtoReflect.Descriptor instead.
func (*UserLocationInformation) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *UserLocationInformation) GetLac() uint32 {
	if x != nil {
		return x.Lac
	}
	return 0
}

func (x *UserLocationInformation) GetCi() uint32 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *UserLocationInformation) GetSac() uint32 {
	if x != nil {
		return x.Sac
	}
	return 0
}

func (x *UserLocationInformation) GetRac() uint32 {
	if x != nil {
		return x.Rac
	}
	return 0
}

func (x *UserLocationInformation) GetTac() uint32 {
	if x != nil {
		return x.Tac
	}
	return 0
}

func (x *UserLocationInformation) GetEci() uint32 {
	if x != nil {
		return x.Eci
	}
	return 0
}

func (x *UserLocationInformation) GetMeNbi() uint32 {
	if x != nil {
		return x.MeNbi
	}
	return 0
}

func (x *UserLocationInformation) GetEMeNbi() uint32 {
	if x != nil {
		return x.EMeNbi
	}
	return 0
}

type ServingNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mcc string `protobuf:"bytes,1,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Mnc string `protobuf:"bytes,2,opt,name=mnc,proto3" json:"mnc,omitempty"`
}

func (x *ServingNetwork) Reset() {
	*x = ServingNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingNetwork) ProtoMessage() {}

func (x *ServingNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingNetwork.ProtoReflect.Descriptor instead.
func (*ServingNetwork) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *ServingNetwork) GetMcc() string {
	if x != nil {
		return x.Mcc
	}
	return ""
}

func (x *ServingNetwork) GetMnc() string {
	if x != nil {
		return x.Mnc
	}
	return ""
}

type BearerContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserPlaneFteid *Fteid          `protobuf:"bytes,2,opt,name=user_plane_fteid,json=userPlaneFteid,proto3" json:"user_plane_fteid,omitempty"`
	Qos            *QosInformation `protobuf:"bytes,3,opt,name=qos,proto3" json:"qos,omitempty"`
	ChargingId     uint32          `protobuf:"varint,4,opt,name=charging_id,json=chargingId,proto3" json:"charging_id,omitempty"`
}

func (x *BearerContext) Reset() {
	*x = BearerContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerContext) ProtoMessage() {}

func (x *BearerContext) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerContext.ProtoReflect.Descriptor instead.
func (*BearerContext) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *BearerContext) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BearerContext) GetUserPlaneFteid() *Fteid {
	if x != nil {
		return x.UserPlaneFteid
	}
	return nil
}

func (x *BearerContext) GetQos() *QosInformation {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *BearerContext) GetChargingId() uint32 {
	if x != nil {
		return x.ChargingId
	}
	return 0
}

type QosInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pci                     uint32 `protobuf:"varint,1,opt,name=pci,proto3" json:"pci,omitempty"`
	PriorityLevel           uint32 `protobuf:"varint,2,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    uint32 `protobuf:"varint,4,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability uint32 `protobuf:"varint,5,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
	Qci                     uint32 `protobuf:"varint,6,opt,name=qci,proto3" json:"qci,omitempty"`
	Gbr                     *Ambr  `protobuf:"bytes,7,opt,name=gbr,proto3" json:"gbr,omitempty"`
	Mbr                     *Ambr  `protobuf:"bytes,8,opt,name=mbr,proto3" json:"mbr,omitempty"`
}

func (x *QosInformation) Reset() {
	*x = QosInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosInformation) ProtoMessage() {}

func (x *QosInformation) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosInformation.ProtoReflect.Descriptor instead.
func (*QosInformation) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *QosInformation) GetPci() uint32 {
	if x != nil {
		return x.Pci
	}
	return 0
}

func (x *QosInformation) GetPriorityLevel() uint32 {
	if x != nil {
		return x.PriorityLevel
	}
	return 0
}

func (x *QosInformation) GetPreemptionCapability() uint32 {
	if x != nil {
		return x.PreemptionCapability
	}
	return 0
}

func (x *QosInformation) GetPreemptionVulnerability() uint32 {
	if x != nil {
		return x.PreemptionVulnerability
	}
	return 0
}

func (x *QosInformation) GetQci() uint32 {
	if x != nil {
		return x.Qci
	}
	return 0
}

func (x *QosInformation) GetGbr() *Ambr {
	if x != nil {
		return x.Gbr
	}
	return nil
}

func (x *QosInformation) GetMbr() *Ambr {
	if x != nil {
		return x.Mbr
	}
	return nil
}

type Ambr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrUl uint64 `protobuf:"varint,1,opt,name=br_ul,json=brUl,proto3" json:"br_ul,omitempty"`
	BrDl uint64 `protobuf:"varint,2,opt,name=br_dl,json=brDl,proto3" json:"br_dl,omitempty"`
}

func (x *Ambr) Reset() {
	*x = Ambr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ambr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ambr) ProtoMessage() {}

func (x *Ambr) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ambr.ProtoReflect.Descriptor instead.
func (*Ambr) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *Ambr) GetBrUl() uint64 {
	if x != nil {
		return x.BrUl
	}
	return 0
}

func (x *Ambr) GetBrDl() uint64 {
	if x != nil {
		return x.BrDl
	}
	return 0
}

type PdnAddressAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Address string `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string `protobuf:"bytes,2,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv6Prefix  uint32 `protobuf:"varint,3,opt,name=ipv6_prefix,json=ipv6Prefix,proto3" json:"ipv6_prefix,omitempty"`
}

func (x *PdnAddressAllocation) Reset() {
	*x = PdnAddressAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdnAddressAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdnAddressAllocation) ProtoMessage() {}

func (x *PdnAddressAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdnAddressAllocation.ProtoReflect.Descriptor instead.
func (*PdnAddressAllocation) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *PdnAddressAllocation) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *PdnAddressAllocation) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *PdnAddressAllocation) GetIpv6Prefix() uint32 {
	if x != nil {
		return x.Ipv6Prefix
	}
	return 0
}

type TimeZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone           uint32 `protobuf:"varint,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	DaylightSavingTime uint32 `protobuf:"varint,2,opt,name=daylight_saving_time,json=daylightSavingTime,proto3" json:"daylight_saving_time,omitempty"`
}

func (x *TimeZone) Reset() {
	*x = TimeZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeZone) ProtoMessage() {}

func (x *TimeZone) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeZone.ProtoReflect.Descriptor instead.
func (*TimeZone) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *TimeZone) GetTimeZone() uint32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *TimeZone) GetDaylightSavingTime() uint32 {
	if x != nil {
		return x.DaylightSavingTime
	}
	return 0
}

type Fteid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Address string `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string `protobuf:"bytes,2,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Teid        uint32 `protobuf:"varint,3,opt,name=teid,proto3" json:"teid,omitempty"`
}

func (x *Fteid) Reset() {
	*x = Fteid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fteid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fteid) ProtoMessage() {}

func (x *Fteid) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fteid.ProtoReflect.Descriptor instead.
func (*Fteid) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *Fteid) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *Fteid) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *Fteid) GetTeid() uint32 {
	if x != nil {
		return x.Teid
	}
	return 0
}

type CreateSessionResponsePgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberIp   string         `protobuf:"bytes,3,opt,name=subscriber_ip,json=subscriberIp,proto3" json:"subscriber_ip,omitempty"`
	ApnRestriction uint32         `protobuf:"varint,4,opt,name=apn_restriction,json=apnRestriction,proto3" json:"apn_restriction,omitempty"`
	BearerContext  *BearerContext `protobuf:"bytes,5,opt,name=bearer_context,json=bearerContext,proto3" json:"bearer_context,omitempty"` //TrafficFlowTemplate saved_tft = 13;
}

func (x *CreateSessionResponsePgw) Reset() {
	*x = CreateSessionResponsePgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionResponsePgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponsePgw) ProtoMessage() {}

func (x *CreateSessionResponsePgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponsePgw.ProtoReflect.Descriptor instead.
func (*CreateSessionResponsePgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSessionResponsePgw) GetSubscriberIp() string {
	if x != nil {
		return x.SubscriberIp
	}
	return ""
}

func (x *CreateSessionResponsePgw) GetApnRestriction() uint32 {
	if x != nil {
		return x.ApnRestriction
	}
	return 0
}

func (x *CreateSessionResponsePgw) GetBearerContext() *BearerContext {
	if x != nil {
		return x.BearerContext
	}
	return nil
}

type ModifyBearerRequestPgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	EnbFteid *Fteid `protobuf:"bytes,2,opt,name=enb_fteid,json=enbFteid,proto3" json:"enb_fteid,omitempty"`
}

func (x *ModifyBearerRequestPgw) Reset() {
	*x = ModifyBearerRequestPgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyBearerRequestPgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBearerRequestPgw) ProtoMessage() {}

func (x *ModifyBearerRequestPgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyBearerRequestPgw.ProtoReflect.Descriptor instead.
func (*ModifyBearerRequestPgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyBearerRequestPgw) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *ModifyBearerRequestPgw) GetEnbFteid() *Fteid {
	if x != nil {
		return x.EnbFteid
	}
	return nil
}

type ModifyBearerResponsePgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyBearerResponsePgw) Reset() {
	*x = ModifyBearerResponsePgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyBearerResponsePgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBearerResponsePgw) ProtoMessage() {}

func (x *ModifyBearerResponsePgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyBearerResponsePgw.ProtoReflect.Descriptor instead.
func (*ModifyBearerResponsePgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{11}
}

type DeleteSessionRequestPgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"` // needed for nh in feg
}

func (x *DeleteSessionRequestPgw) Reset() {
	*x = DeleteSessionRequestPgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionRequestPgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequestPgw) ProtoMessage() {}

func (x *DeleteSessionRequestPgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequestPgw.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequestPgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSessionRequestPgw) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

type DeleteSessionResponsePgw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSessionResponsePgw) Reset() {
	*x = DeleteSessionResponsePgw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionResponsePgw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponsePgw) ProtoMessage() {}

func (x *DeleteSessionResponsePgw) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionResponsePgw.ProtoReflect.Descriptor instead.
func (*DeleteSessionResponsePgw) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{13}
}

type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"` // needed for nh in feg
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *EchoRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s8_proxy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s8_proxy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_feg_protos_s8_proxy_proto_rawDescGZIP(), []int{15}
}

var File_feg_protos_s8_proxy_proto protoreflect.FileDescriptor

var file_feg_protos_s8_proxy_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x65, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x38, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x1a, 0x19, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x22, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x61,
	0x69, 0x2f, 0x6d, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x6f, 0x61, 0x69, 0x2f, 0x73, 0x74, 0x64, 0x5f, 0x33, 0x67, 0x70, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x05, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x67, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73,
	0x69, 0x73, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73,
	0x64, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x65, 0x69, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x34, 0x0a, 0x03, 0x75, 0x6c, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x75, 0x6c, 0x69, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x72, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x64, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x50, 0x44, 0x4e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x70, 0x64, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x70, 0x61, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x50, 0x64, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x61, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61,
	0x70, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x04, 0x61, 0x6d, 0x62, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x6d, 0x62, 0x72, 0x52, 0x04, 0x61, 0x6d,
	0x62, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0d, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x39, 0x0a, 0x18,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6c, 0x61, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x63, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x63, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x63, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x63, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x65, 0x4e, 0x62, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x4d, 0x65, 0x4e, 0x62, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x4d, 0x65, 0x4e, 0x62, 0x69, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x45, 0x4d, 0x65, 0x4e, 0x62, 0x69, 0x22, 0x34, 0x0a,
	0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x63,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x6e, 0x63, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x5f, 0x66, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x74, 0x65, 0x69,
	0x64, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x46, 0x74, 0x65, 0x69,
	0x64, 0x12, 0x2b, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x91, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x63, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x70, 0x63, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x15, 0x70,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x72, 0x65, 0x65,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x39, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x17, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x71,
	0x63, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x71, 0x63, 0x69, 0x12, 0x21, 0x0a,
	0x03, 0x67, 0x62, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x6d, 0x62, 0x72, 0x52, 0x03, 0x67, 0x62, 0x72,
	0x12, 0x21, 0x0a, 0x03, 0x6d, 0x62, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x6d, 0x62, 0x72, 0x52, 0x03,
	0x6d, 0x62, 0x72, 0x22, 0x30, 0x0a, 0x04, 0x41, 0x6d, 0x62, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x62,
	0x72, 0x5f, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x62, 0x72, 0x55, 0x6c,
	0x12, 0x13, 0x0a, 0x05, 0x62, 0x72, 0x5f, 0x64, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x62, 0x72, 0x44, 0x6c, 0x22, 0x7d, 0x0a, 0x14, 0x50, 0x64, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x70, 0x76, 0x36, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x22, 0x59, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x64, 0x61, 0x79, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x64, 0x61, 0x79,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x61, 0x0a, 0x05, 0x46, 0x74, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x65,
	0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x67, 0x77, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x49, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61,
	0x70, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x0e, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0d, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5b,
	0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x67, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x2d, 0x0a, 0x09,
	0x65, 0x6e, 0x62, 0x5f, 0x66, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x74, 0x65, 0x69,
	0x64, 0x52, 0x08, 0x65, 0x6e, 0x62, 0x46, 0x74, 0x65, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x67, 0x77, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x67,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x67,
	0x77, 0x22, 0x21, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x29, 0x0a, 0x07, 0x50, 0x44, 0x4e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56,
	0x36, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x50, 0x56, 0x34, 0x56, 0x36, 0x10, 0x02, 0x32,
	0xd9, 0x02, 0x0a, 0x07, 0x53, 0x38, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x67, 0x77,
	0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x67, 0x77, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x67, 0x77, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x67, 0x77, 0x22, 0x00,
	0x12, 0x5a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x67, 0x77, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x67, 0x77, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x63, 0x68,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2f, 0x66, 0x65, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feg_protos_s8_proxy_proto_rawDescOnce sync.Once
	file_feg_protos_s8_proxy_proto_rawDescData = file_feg_protos_s8_proxy_proto_rawDesc
)

func file_feg_protos_s8_proxy_proto_rawDescGZIP() []byte {
	file_feg_protos_s8_proxy_proto_rawDescOnce.Do(func() {
		file_feg_protos_s8_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_feg_protos_s8_proxy_proto_rawDescData)
	})
	return file_feg_protos_s8_proxy_proto_rawDescData
}

var file_feg_protos_s8_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feg_protos_s8_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_feg_protos_s8_proxy_proto_goTypes = []interface{}{
	(PDNType)(0),                     // 0: magma.feg.PDNType
	(*CreateSessionRequestPgw)(nil),  // 1: magma.feg.CreateSessionRequestPgw
	(*UserLocationInformation)(nil),  // 2: magma.feg.UserLocationInformation
	(*ServingNetwork)(nil),           // 3: magma.feg.ServingNetwork
	(*BearerContext)(nil),            // 4: magma.feg.BearerContext
	(*QosInformation)(nil),           // 5: magma.feg.QosInformation
	(*Ambr)(nil),                     // 6: magma.feg.Ambr
	(*PdnAddressAllocation)(nil),     // 7: magma.feg.PdnAddressAllocation
	(*TimeZone)(nil),                 // 8: magma.feg.TimeZone
	(*Fteid)(nil),                    // 9: magma.feg.Fteid
	(*CreateSessionResponsePgw)(nil), // 10: magma.feg.CreateSessionResponsePgw
	(*ModifyBearerRequestPgw)(nil),   // 11: magma.feg.ModifyBearerRequestPgw
	(*ModifyBearerResponsePgw)(nil),  // 12: magma.feg.ModifyBearerResponsePgw
	(*DeleteSessionRequestPgw)(nil),  // 13: magma.feg.DeleteSessionRequestPgw
	(*DeleteSessionResponsePgw)(nil), // 14: magma.feg.DeleteSessionResponsePgw
	(*EchoRequest)(nil),              // 15: magma.feg.EchoRequest
	(*EchoResponse)(nil),             // 16: magma.feg.EchoResponse
}
var file_feg_protos_s8_proxy_proto_depIdxs = []int32{
	3,  // 0: magma.feg.CreateSessionRequestPgw.serving_network:type_name -> magma.feg.ServingNetwork
	2,  // 1: magma.feg.CreateSessionRequestPgw.uli:type_name -> magma.feg.UserLocationInformation
	0,  // 2: magma.feg.CreateSessionRequestPgw.pdn_type:type_name -> magma.feg.PDNType
	7,  // 3: magma.feg.CreateSessionRequestPgw.paa:type_name -> magma.feg.PdnAddressAllocation
	6,  // 4: magma.feg.CreateSessionRequestPgw.ambr:type_name -> magma.feg.Ambr
	4,  // 5: magma.feg.CreateSessionRequestPgw.bearer_context:type_name -> magma.feg.BearerContext
	8,  // 6: magma.feg.CreateSessionRequestPgw.time_zone:type_name -> magma.feg.TimeZone
	9,  // 7: magma.feg.BearerContext.user_plane_fteid:type_name -> magma.feg.Fteid
	5,  // 8: magma.feg.BearerContext.qos:type_name -> magma.feg.QosInformation
	6,  // 9: magma.feg.QosInformation.gbr:type_name -> magma.feg.Ambr
	6,  // 10: magma.feg.QosInformation.mbr:type_name -> magma.feg.Ambr
	4,  // 11: magma.feg.CreateSessionResponsePgw.bearer_context:type_name -> magma.feg.BearerContext
	9,  // 12: magma.feg.ModifyBearerRequestPgw.enb_fteid:type_name -> magma.feg.Fteid
	1,  // 13: magma.feg.S8Proxy.CreateSession:input_type -> magma.feg.CreateSessionRequestPgw
	11, // 14: magma.feg.S8Proxy.ModifyBearer:input_type -> magma.feg.ModifyBearerRequestPgw
	13, // 15: magma.feg.S8Proxy.DeleteSession:input_type -> magma.feg.DeleteSessionRequestPgw
	15, // 16: magma.feg.S8Proxy.SendEcho:input_type -> magma.feg.EchoRequest
	10, // 17: magma.feg.S8Proxy.CreateSession:output_type -> magma.feg.CreateSessionResponsePgw
	12, // 18: magma.feg.S8Proxy.ModifyBearer:output_type -> magma.feg.ModifyBearerResponsePgw
	14, // 19: magma.feg.S8Proxy.DeleteSession:output_type -> magma.feg.DeleteSessionResponsePgw
	16, // 20: magma.feg.S8Proxy.SendEcho:output_type -> magma.feg.EchoResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_feg_protos_s8_proxy_proto_init() }
func file_feg_protos_s8_proxy_proto_init() {
	if File_feg_protos_s8_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feg_protos_s8_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionRequestPgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLocationInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BearerContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ambr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdnAddressAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fteid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionResponsePgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyBearerRequestPgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyBearerResponsePgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionRequestPgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionResponsePgw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s8_proxy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feg_protos_s8_proxy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feg_protos_s8_proxy_proto_goTypes,
		DependencyIndexes: file_feg_protos_s8_proxy_proto_depIdxs,
		EnumInfos:         file_feg_protos_s8_proxy_proto_enumTypes,
		MessageInfos:      file_feg_protos_s8_proxy_proto_msgTypes,
	}.Build()
	File_feg_protos_s8_proxy_proto = out.File
	file_feg_protos_s8_proxy_proto_rawDesc = nil
	file_feg_protos_s8_proxy_proto_goTypes = nil
	file_feg_protos_s8_proxy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// S8ProxyClient is the client API for S8Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S8ProxyClient interface {
	CreateSession(ctx context.Context, in *CreateSessionRequestPgw, opts ...grpc.CallOption) (*CreateSessionResponsePgw, error)
	ModifyBearer(ctx context.Context, in *ModifyBearerRequestPgw, opts ...grpc.CallOption) (*ModifyBearerResponsePgw, error)
	DeleteSession(ctx context.Context, in *DeleteSessionRequestPgw, opts ...grpc.CallOption) (*DeleteSessionResponsePgw, error)
	SendEcho(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
}

type s8ProxyClient struct {
	cc grpc.ClientConnInterface
}

func NewS8ProxyClient(cc grpc.ClientConnInterface) S8ProxyClient {
	return &s8ProxyClient{cc}
}

func (c *s8ProxyClient) CreateSession(ctx context.Context, in *CreateSessionRequestPgw, opts ...grpc.CallOption) (*CreateSessionResponsePgw, error) {
	out := new(CreateSessionResponsePgw)
	err := c.cc.Invoke(ctx, "/magma.feg.S8Proxy/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s8ProxyClient) ModifyBearer(ctx context.Context, in *ModifyBearerRequestPgw, opts ...grpc.CallOption) (*ModifyBearerResponsePgw, error) {
	out := new(ModifyBearerResponsePgw)
	err := c.cc.Invoke(ctx, "/magma.feg.S8Proxy/ModifyBearer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s8ProxyClient) DeleteSession(ctx context.Context, in *DeleteSessionRequestPgw, opts ...grpc.CallOption) (*DeleteSessionResponsePgw, error) {
	out := new(DeleteSessionResponsePgw)
	err := c.cc.Invoke(ctx, "/magma.feg.S8Proxy/DeleteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s8ProxyClient) SendEcho(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/magma.feg.S8Proxy/SendEcho", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S8ProxyServer is the server API for S8Proxy service.
type S8ProxyServer interface {
	CreateSession(context.Context, *CreateSessionRequestPgw) (*CreateSessionResponsePgw, error)
	ModifyBearer(context.Context, *ModifyBearerRequestPgw) (*ModifyBearerResponsePgw, error)
	DeleteSession(context.Context, *DeleteSessionRequestPgw) (*DeleteSessionResponsePgw, error)
	SendEcho(context.Context, *EchoRequest) (*EchoResponse, error)
}

// UnimplementedS8ProxyServer can be embedded to have forward compatible implementations.
type UnimplementedS8ProxyServer struct {
}

func (*UnimplementedS8ProxyServer) CreateSession(context.Context, *CreateSessionRequestPgw) (*CreateSessionResponsePgw, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedS8ProxyServer) ModifyBearer(context.Context, *ModifyBearerRequestPgw) (*ModifyBearerResponsePgw, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyBearer not implemented")
}
func (*UnimplementedS8ProxyServer) DeleteSession(context.Context, *DeleteSessionRequestPgw) (*DeleteSessionResponsePgw, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSession not implemented")
}
func (*UnimplementedS8ProxyServer) SendEcho(context.Context, *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEcho not implemented")
}

func RegisterS8ProxyServer(s *grpc.Server, srv S8ProxyServer) {
	s.RegisterService(&_S8Proxy_serviceDesc, srv)
}

func _S8Proxy_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequestPgw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S8ProxyServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S8Proxy/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S8ProxyServer).CreateSession(ctx, req.(*CreateSessionRequestPgw))
	}
	return interceptor(ctx, in, info, handler)
}

func _S8Proxy_ModifyBearer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyBearerRequestPgw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S8ProxyServer).ModifyBearer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S8Proxy/ModifyBearer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S8ProxyServer).ModifyBearer(ctx, req.(*ModifyBearerRequestPgw))
	}
	return interceptor(ctx, in, info, handler)
}

func _S8Proxy_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSessionRequestPgw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S8ProxyServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S8Proxy/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S8ProxyServer).DeleteSession(ctx, req.(*DeleteSessionRequestPgw))
	}
	return interceptor(ctx, in, info, handler)
}

func _S8Proxy_SendEcho_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S8ProxyServer).SendEcho(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S8Proxy/SendEcho",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S8ProxyServer).SendEcho(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _S8Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.S8Proxy",
	HandlerType: (*S8ProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSession",
			Handler:    _S8Proxy_CreateSession_Handler,
		},
		{
			MethodName: "ModifyBearer",
			Handler:    _S8Proxy_ModifyBearer_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _S8Proxy_DeleteSession_Handler,
		},
		{
			MethodName: "SendEcho",
			Handler:    _S8Proxy_SendEcho_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/s8_proxy.proto",
}
