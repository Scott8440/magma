{{/*
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

{{- if .Values.mysql.create }}
{{- $envAll := . }}

{{- $saNamespace := $envAll.Release.Namespace }}
{{- $serviceAccountName := printf "%s" .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nms-mysql
  labels:
{{ tuple $envAll "nms" "mysql" | include "nms.labels" | indent 4 }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
{{ tuple $envAll "nms" "mysql" | include "nms.selector-labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "nms" "mysql" | include "nms.selector-labels" | indent 8 }}
    spec:
      {{- if .Values.rbac }}
      serviceAccountName: {{ $serviceAccountName }}
      {{- end }}
      {{- with .Values.mysql.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.mysql.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.mysql.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 60
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | trimSuffix "\n" | indent 8 }}
      {{- end }}
      restartPolicy: Always
      containers:
        - name: nms-mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          resources:
{{ toYaml .Values.mysql.resources | indent 12 }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: "mysql-data"
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.env.MYSQL_ROOT_PASSWORD | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.env.MYSQL_DATABASE | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.env.MYSQL_USER | quote }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.env.MYSQL_PASSWORD | quote }}
      volumes:
        - name: "mysql-data"
{{ toYaml .Values.mysql.volumes.mysqlData.volumeSpec | indent 10 }}

{{- end }}
